@page "/subcon-ap-ledger/list"

@inject IVoucherService voucherService
@inject ILedgerService ledgerService
@inject NavigationManager navigationManager

<div class='page-cont'>
     <div class='drawer-right-min'>
        <MudDrawer Class='pa-1' @bind-Open='openSideFilter' Fixed='false' Anchor='Anchor.Right' Elevation='0' Variant='DrawerVariant.Mini' OpenMiniOnHover='false'>
            <LedgerFilterComponent OpenSideFilterClick='(() => openSideFilter = !openSideFilter)' 
                FilterClick='FilterTable' ResetTableClick='ReloadTable'
                contentVisible='openSideFilter' moduleName="subcon-ap-list"/>
        </MudDrawer>
     </div>
    <MudContainer Class='py-2 pl-2 pr-10  table-toolbar-custom1' Fixed='false' MaxWidth='MaxWidth.ExtraExtraLarge'>
        @if(isPrint)
        {
            <div class="d-flex align-items-end flex-column mb-2">
                <MudButton Class='align-self-end mb-2' OnClick='( ()=> isPrint = false )' EndIcon='@Icons.Material.Filled.Close' Variant='Variant.Filled' Color='Color.Default' Size='Size.Small' DisableElevation>
                    Close Report
                </MudButton>
                <iframe style='height:calc(100vh - 235px);' src='@PDFContent'/>
            </div>
        }
        else 
        {
            <MudTable Class='rounded-b-0 table-style-1 overflow-hidden' T='VoucherDetailModel' ServerData='new Func<TableState, Task<TableData<VoucherDetailModel>>>(LoadARList)'  @ref='tableVariable' Hover Loading='isLoading'
                Breakpoint="Breakpoint.Xs" FixedHeader FixedFooter CustomFooter Bordered Dense Virtualize Height='calc(100vh - 185px)'
                RowsPerPage='15' Elevation='1'>
                <ToolBarContent>
                    <MudText Typo='Typo.caption'>
                        @GlobalClassList.subconARList.Count() 
                        @(GlobalClassList.subconARList.Count() > 1 ? "item" : "items") 
                        in total
                    </MudText>
                    <FilteredItemsView filterParameter='filterParameter' OpenSideFilter='(() => openSideFilter = !openSideFilter)'/>
                    <MudSpacer />
                    <MudTooltip Text="Refresh Table" Arrow Placement='Placement.Top'>
                        <MudIconButton Class='@(isLoading ? "mudbtnico-rotate":"")' Icon="@Icons.Material.Filled.Refresh" Size="Size.Small"
                            Color='@(isLoading ? Color.Info : Color.Default)'/>
                    </MudTooltip>
                    <MudMenu Class='overflow-hidden mudbtnico-rotate-90' StartIcon='@Icons.Material.Filled.MoreVert' AnchorOrigin='Origin.BottomCenter' ActivationEvent="MouseEvent.MouseOver"
                        TransformOrigin='Origin.TopRight' Dense Size='Size.Small' Label='More'>
                        <MudMenuItem OnClick="( async () => await GetReport() )"  >
                            <div class='d-flex align-center gap-2 '>
                                <MudIcon Icon='@Icons.Material.Filled.PictureAsPdf' Size='Size.Small' Color='Color.Dark' />
                                <MudText Typo='Typo.body2' Color='Color.Dark'>Print</MudText>
                            </div>
                        </MudMenuItem>
                        <MudMenuItem OnClick="(() => openSideFilter = !openSideFilter)"  >
                            <div class='d-flex align-center gap-2 '>
                                <MudIcon Icon='@Icons.Material.Filled.FilterList' Size='Size.Small' Color='Color.Dark' />
                                <MudText Typo='Typo.body2' Color='Color.Dark'>Filter</MudText>
                            </div>
                        </MudMenuItem>
                    </MudMenu>
                </ToolBarContent>
                <ColGroup>
                    <col style="width:20px" />
                    <col />
                    <col />
                    <col style="width:20px" />
                    <col style="width:20px" />
                    <col style="width:20px" />
                </ColGroup>
                <HeaderContent>
                    <MudTh Class='customheader-6'>
                        <div class='d-flex align-center justify-space-around gap-2'>
                            <MudTableSortLabel SortLabel='SortDate' T='VoucherDetailModel' 
                                    InitialDirection="SortDirection.Descending">
                                    Date
                            </MudTableSortLabel>
                            <MudTableSortLabel SortLabel='SortControlNumber' T='VoucherDetailModel' 
                                    InitialDirection="SortDirection.None">
                                    Reference No.
                            </MudTableSortLabel>
                        </div>
                    </MudTh>
                    <MudTh Class='customheader-6'>Payee</MudTh>
                    <MudTh Class='customheader-6'>Remarks</MudTh>
                    <MudTh Class='customheader-6 text-center'>Debit</MudTh>
                    <MudTh Class='customheader-6 text-center'>Credit</MudTh>
                    <MudTh Class='customheader-6 text-right'>Balance</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd Class='text-center' DataLabel=" Date">
                        <div class='d-flex align-center justify-space-around gap-2'>
                            <MudChip Class='chip-radius-5 font-bold font10' Variant='Variant.Outlined' Icon='@Icons.Material.Filled.CalendarMonth' Color='Color.Dark' Size='Size.Small'>
                                @context.VoucherDate.ToShortDateString()
                            </MudChip>
                            <MudTooltip Text='@($"See {context.ControlNumber}")' Arrow Placement='Placement.Top'>
                                <MudButton Class='btn-tbl-link' StartIcon='@Icons.Material.Filled.Link'
                                Href='@FindReference(context.ControlNumber)' Target='_blank'
                                    Variant='Variant.Filled' Color='Color.Error' Size='Size.Small' DisableElevation>
                                        @context.ControlNumber
                                </MudButton>
                            </MudTooltip>
                        </div>
                    </MudTd>
                    <MudTd DataLabel="Project Name">
                       <div class='dynamic-width-1'>
                            <small>@context.ProjectName</small>
                        </div>
                    </MudTd>
                    <MudTd DataLabel="SubContractor Name">
                        <div class='dynamic-width-1'>
                            <small>@context.Remarks</small>
                        </div>
                    </MudTd>
                    <MudTd DataLabel="Debit">
                       <div class='dynamic-td-amtwidth'>
                            <small>@Extensions.GetEnumDescription(Enums.BankCurrency.PhilippinePeso)</small>
                            <MudSpacer />
                            <small>@context.Debit.ToString("N2")</small>
                        </div>
                    </MudTd>
                    <MudTd DataLabel="Credit">
                        <div class='dynamic-td-amtwidth'>
                            <small>@Extensions.GetEnumDescription(Enums.BankCurrency.PhilippinePeso)</small>
                            <MudSpacer />
                            <small>@context.Credit.ToString("N2")</small>
                        </div>
                    </MudTd>
                    <MudTd Class='wspace-nowrap text-right' DataLabel='Amount'>
                        <div class='dynamic-td-amtwidth'>
                            <small class='font-bold color-green font12'>
                                @Extensions.GetEnumDescription(Enums.BankCurrency.PhilippinePeso) 
                            </small>
                            <MudSpacer />
                            <small class='font-bold color-green font12'>
                                @context.RunningBalances.ToString("N2")
                            </small>
                        </div>
                    </MudTd>
                </RowTemplate>
                <NoRecordsContent>
                        <MudText Class='txt-uppercase font-bold font12' Color='Color.Error'>No records found</MudText>
                </NoRecordsContent>
                <PagerContent>
                    <MudTablePager PageSizeOptions='@GlobalVariable.pageSize' />
                </PagerContent>
            </MudTable>
        }
    </MudContainer>
</div>

@code{

    private bool isLoading, toggleSidebar = true, openSideFilter;
    private IEnumerable<VoucherDetailModel>? pageData;
    private MudTable<VoucherDetailModel> tableVariable = new MudTable<VoucherDetailModel>();
    private FilterParameter filterParameter = new();
    private bool isPrint = false;
    private string PDFContent = default!;

    protected override void OnInitialized()
    {
        GlobalClass.pageTitle = "SUB-CON AP LEDGERS";
    }
    private async Task<TableData<VoucherDetailModel>> LoadARList(TableState tableState)
    {
        isLoading = true;
        IEnumerable<VoucherDetailModel> data = await voucherService.GetSunbConProjects(filterParameter,GlobalClass.token);
        switch (tableState.SortLabel)
        {
            case "SortDate":
                data = data.OrderByDirection(tableState.SortDirection, x=>x.VoucherDate);
                break;
            case "SortControlNumber":
                data = data.OrderByDirection(tableState.SortDirection, x=>x.ControlNumber);
                break;
        }
        GlobalClassList.subconARList = data.ToList();
        pageData = data.Skip(tableState.Page * tableState.PageSize).Take(tableState.PageSize).ToArray();
        var total = data.Count();
        isLoading = !isLoading;
        return new TableData<VoucherDetailModel>()
        {
            TotalItems = total,
            Items = pageData
        };
    }
    private async Task ReloadTable()
    {
        filterParameter = new FilterParameter();
        await tableVariable.ReloadServerData();
    }
    private async Task FilterTable()
    {
        
        filterParameter = GlobalVariable.filterParameter;
        await tableVariable.ReloadServerData();
    }
    private string FindReference(string voucherControlNumber)
    {
        return String.Format("{0}voucher/list/{1}", navigationManager.BaseUri, voucherControlNumber);
    }
    private async Task GetReport()
    {
        GlobalClassList.subconARList.ForEach( ar => ar.PayeeName = filterParameter.PayeeName);
        PDFContent = await ledgerService.GetSubConARReport(GlobalClassList.subconARList);
        isPrint = true;
    }

}