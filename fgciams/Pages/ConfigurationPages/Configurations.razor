@page "/configurations"

@inject IDialogService dialogService
@inject ISnackbar SnackbarService
@inject NavigationManager navigationManager
@attribute [Authorize]


@if (!dataFetched)
{
    <div class='page-cont d-flex align-center justify-center height100'>
        <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
    </div>    
}
else
{
    <div class='page-cont d-flex'>
        <div class='subdrawer-left transition-05s-ease mr-2' square style='@(open ? "width:270px" : "width:58px")'>
            @* <MudDrawerContainer Class="mud-height-full"> *@
                <MudDrawer @bind-Open='open' Fixed='false' Anchor='Anchor.Left' Elevation='0' Variant="@DrawerVariant.Mini" OpenMiniOnHover='true'>
                    <MudNavMenu>
                        <ConfigurationModuleMenuComponent
                            PageClick='( (int pageSequence)=> DynamicPages(pageSequence) )'
                            VATDialogClick='( ()=> OpenVATDialog())'
                            PageSequence='@PageSequence'
                        />
                    </MudNavMenu>
                    @* <MudNavMenu>
                        <div class='transition-025s-ease @(isAcctgStatus ? "activelink" : "")'>
                            <MudNavLink OnClick='(() => DynamicPages(1))' Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.FactCheck">ACCOUNTING STATUS</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isBank ? "activelink" : "")'>
                            <MudNavLink Class='transition-025s-ease' OnClick='(() => DynamicPages(2))' Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.AccountBalance">BANK</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isBillDoc ? "activelink" : "")'>
                            <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(3))' Match="NavLinkMatch.All" Icon="fa-solid fa-receipt">BILLING DOCUMENT</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isDiv ? "activelink" : "")'>
                            <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(4))' Match="NavLinkMatch.All" Icon="fa-solid fa-bars-staggered">DIVISION</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isMoP ? "activelink" : "")'>
                            <MudNavLink OnClick='(() => DynamicPages(5))' Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Payment">MODE OF PAYMENT</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isPayee ? "activelink" : "")'>
                            <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(6))' Match="NavLinkMatch.All" Icon="fa-solid fa-person">PAYEE</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isPayeeCat ? "activelink" : "")'>
                            <MudNavLink OnClick='(() => DynamicPages(7))' Match="NavLinkMatch.All" Icon='@Icons.Material.Filled.Group'>PAYEE CATEGORY</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isPCL ? "activelink" : "")'>
                            <MudNavLink OnClick='(() => DynamicPages(8))' Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.CreditScore">PROJECT CHARGING LINE</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isReqType ? "activelink" : "")'>
                            <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(9))' Match="NavLinkMatch.All" Icon='fa-solid fa-clipboard-check'>REQUEST TYPES</MudNavLink>
                        </div>
                        <MudNavGroup Class='childnavgroup expandheight-group fa-icon-center' Title='SUBCON' Icon='fa-solid fa-industry' HideExpandIcon='true'>
                            <div class='transition-025s-ease @(isSubCC ? "activelink" : "")'>
                                <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(10))' Match="NavLinkMatch.All" Icon='fa-solid fa-building'>SUB CON COMPANY</MudNavLink>
                            </div>
                            <div class='transition-025s-ease @(isSubCGI ? "activelink" : "")'>
                                <MudNavLink OnClick='(() => DynamicPages(11))' Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Info">SUB CON GENERAL INFO.</MudNavLink>
                            </div>
                            <div class='transition-025s-ease @(isSubCP ? "activelink" : "")'>
                                <MudNavLink OnClick='(() => DynamicPages(12))' Match="NavLinkMatch.All" Icon='@Icons.Material.Filled.Engineering'>SUB CON POSITION</MudNavLink>
                            </div>
                            <div class='transition-025s-ease @(isScopeOfW ? "activelink" : "")'>
                                <MudNavLink OnClick='(() => DynamicPages(20))' Match="NavLinkMatch.All" Icon='@Icons.Material.Filled.Work'>SCOPE OF WORK</MudNavLink>
                            </div>
                        </MudNavGroup>
                        <MudNavGroup Class='childnavgroup expandheight-group fa-icon-center' Title='CHART OF ACCOUNTS' Icon='@Icons.Material.Filled.AddChart' HideExpandIcon='true'>
                            <div class='transition-025s-ease @(isEL ? "activelink" : "")'>
                                <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(13))' Match="NavLinkMatch.All" Icon='fa-solid fa-file-invoice-dollar'>EXPENSE LINE</MudNavLink>
                            </div>
                            <div class='transition-025s-ease @(isAccLG ? "activelink" : "")'>
                                <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(14))' Match="NavLinkMatch.All" Icon="fa-solid fa-business-time">ACCOUNT LINE GROUP</MudNavLink>
                            </div>
                            <div class='transition-025s-ease @(isAccT ? "activelink" : "")'>
                                <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(15))' Match="NavLinkMatch.All" Icon='fa-solid fa-money-check'>ACCOUNT TYPE</MudNavLink>
                            </div>
                            <div class='transition-025s-ease @(isAccLT ? "activelink" : "")'>
                                <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(16))' Match="NavLinkMatch.All" Icon="fa-solid fa-house-laptop">ACCOUNT LINE TYPE</MudNavLink>
                            </div>
                        </MudNavGroup>
                        <MudNavGroup Class='childnavgroup expandheight-group fa-icon-center' Title='SUPPLIER' Icon='@Icons.Material.Filled.AirportShuttle' HideExpandIcon='true'>
                            <div class='transition-025s-ease @(isSuppList ? "activelink" : "")'>
                                <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(17))' Match="NavLinkMatch.All" Icon='@Icons.Material.Filled.Groups'>SUPPLIER</MudNavLink>
                            </div>
                            <div class='transition-025s-ease @(isTerms ? "activelink" : "")'>
                                    <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(18))' Match="NavLinkMatch.All" Icon='@Icons.Material.Filled.Article'>TERMS OF PAYMENT</MudNavLink>
                            </div>
                            <div class='transition-025s-ease @(isTaxCode ? "activelink" : "")'>
                                <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(19))' Match="NavLinkMatch.All" Icon='@Icons.Material.Filled.Money'>TAX CODE</MudNavLink>
                            </div>
                            <MudNavLink OnClick='(() => OpenVATDialog())' Class='fa-icon-center text-left' Match='NavLinkMatch.All' Icon='@Icons.Material.Filled.Percent'>VAT</MudNavLink>
                        </MudNavGroup>
                        <div class='transition-025s-ease @(isRouteUser ? "activelink" : "")'>
                            <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(21))' Match="NavLinkMatch.All" Icon='fa-solid fa-user'>VOUCHER TAGS</MudNavLink>
                        </div>
                        <div class='transition-025s-ease @(isPrivilege ? "activelink" : "")'>
                            <MudNavLink Class='fa-icon-center' OnClick='(() => DynamicPages(22))' Match="NavLinkMatch.All" Icon='@Icons.Material.Filled.ShieldMoon'>USER PRIVILEGES</MudNavLink>
                        </div>
                    </MudNavMenu> *@
                </MudDrawer>
            @* </MudDrawerContainer> *@
        </div>
        <MudContainer Class='pa-0 transition-05s-ease' Fixed='false' MaxWidth='MaxWidth.ExtraExtraLarge'>
            @if (isAcctgStatus) {
                <AccountingStatus />
            } else if (isBank) {
                <Bank />
            } else if (isBillDoc) {
                <BillingDocument />
            } else if (isDiv) {
                <Division />
            } else if (isMoP) {
                <ModeOfPayment />
            } else if (isPayee) {
                <Payee />
            } else if (isPayeeCat) {
                <PayeeCategoryPage />
            } else if (isPCL) {
                <ProjectChargingLine />
            } else if (isReqType) {
                <RequestTypePage />
            } else if (isSubCC) {
                <SubContractorCompany />
            } else if (isSubCGI) {
                <SubConGeneralInformationPage />
            } else if (isSubCP) {
                <SubContractorPositionPage />
            } else if (isScopeOfW) {
                <ScopeOfWork/>
            } else if (isEL) {
                <ExpenseLine />
            } else if (isAccLG) {
                <AccountingLineGroup />
            } else if (isAccT) {
                <AccountType />
            } else if (isAccLT) {
                <AccountLineType />
            } else if (isSuppList) {
                <SupplierList />
            } else if (isTerms) {
                <TermsOfPaymentList />
            } else if (isTaxCode) {
                <TaxCodeList />
            } else if (isRouteUser) {
                <VoucherRouteTagUserList />
            } else if (isPrivilege) {
                <AccessLevel />
            } else if (isCustomer) {
                <Customer />
            } else if (isCustomerType) {
                <CustomerType/>
            }
        </MudContainer>
    </div>
}


@code {
    private bool open, dataFetched, AlarmOn,
    isAcctgStatus, isBank, isBillDoc, 
    isDiv, isMoP, isPayee, isPayeeCat, 
    isPCL, isReqType, isSubCC, isSubCGI, 
    isSubCP, isScopeOfW, isEL, isAccLG, isAccT, isAccLT,
    isSuppList, isTerms, isTaxCode, isRouteUser, isPrivilege, isCustomer , isCustomerType;
    private int PageSequence { get; set; } = 1;
    protected override async Task OnInitializedAsync()
    {
        GlobalClass.pageTitle = "Configuration Settings";
        while (GlobalClass.currentUserAccount == null)
            await Task.Delay(1);
        isAcctgStatus = true;
        await Task.Delay(1000);
        dataFetched = true;
    }
    private async void DynamicPages(int pageSequence)
    {
        ResetPages();
        PageSequence = pageSequence;
        if (pageSequence == 1)
            isAcctgStatus = true;
        else if (pageSequence == 2)
            isBank = true;
        else if (pageSequence == 3)
            isBillDoc = true;
        else if (pageSequence == 4)
            isDiv = true;
        else if (pageSequence == 5)
            isMoP = true;
        else if (pageSequence == 6)
            isPayee = true;
        else if (pageSequence == 7)
            isPayeeCat = true;
        else if (pageSequence == 8)
            isPCL = true;
        else if (pageSequence == 9)
            isReqType = true;
        else if (pageSequence == 10)
            isSubCC = true;
        else if (pageSequence == 11)
            isSubCGI = true;
        else if (pageSequence == 12)
            isSubCP = true;
        else if (pageSequence == 13)
            isEL = true;
        else if (pageSequence == 14)
            isAccLG = true;
        else if (pageSequence == 15)
            isAccT = true;
        else if (pageSequence == 16)
            isAccLT = true;
        else if (pageSequence == 17)
            isSuppList = true;
        else if (pageSequence == 18)
            isTerms = true;
        else if (pageSequence == 19)
            isTaxCode = true;
        else if(pageSequence == 20)
            isScopeOfW = true;
        else if(pageSequence == 21)
            isRouteUser = true;
        else if(pageSequence == 22)
            isPrivilege = true;
        else if(pageSequence == 23)
            isCustomer = true;
        else if(pageSequence == 24)
            isCustomerType = true;
    }

    private void ResetPages()
    {
        isAcctgStatus = false;
        isBank = false;
        isBillDoc = false;
        isDiv = false;
        isMoP = false;
        isPayee = false;
        isPayeeCat = false;
        isPCL = false;
        isReqType = false;
        isSubCC = false;
        isSubCGI = false;
        isSubCP = false;
        isScopeOfW = false;
        isEL = false;
        isAccLG = false;
        isAccT = false;
        isAccLT = false;
        isSuppList = false;
        isTerms = false;
        isTaxCode = false;
        isRouteUser = false;
        isPrivilege = false;
        isCustomer = false;
        isCustomerType = false;
    }

    private async Task OpenVATDialog()
    {
        var options = new DialogOptions() { CloseButton = false, MaxWidth = MaxWidth.ExtraSmall, FullWidth = true, NoHeader = false, DisableBackdropClick = false };
        var resultDialog = await dialogService.Show<Shared.Dialogs.VATDialogs.VATDialog>("", options).Result;
        if (!resultDialog.Canceled)
        {
            if ((Enums.ActionMode)resultDialog.Data == Enums.ActionMode.Create)
                Extensions.ShowAlert("VAT successfully added.", Variant.Filled, SnackbarService, Severity.Success);
            else if ((Enums.ActionMode)resultDialog.Data == Enums.ActionMode.Update)
                Extensions.ShowAlert("VAT updated successfully.", Variant.Filled, SnackbarService ,Severity.Info);
        }
    }
}

