<MudDialog Class='customdialog'>
    <TitleContent>
         <MudText Class='txt-uppercase ltr-spacing-1px' Typo='Typo.h6'>@dialogTitle</MudText>
    </TitleContent>
    <DialogContent>
        <MudText Class='font14 pa-2'>
            @contentText
        </MudText>
        <MudText Class="font12 mud-text-secondary pa-2">@note</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Class='btn-ios-d font12' OnClick="Cancel" Variant='Variant.Text' Size='Size.Small' DisableElevation>Cancel</MudButton>
        <MudButton Class='btn-ios-d font12' OnClick="Submit" Variant='Variant.Filled' Color="@color" Size='Size.Small' DisableElevation>@buttonText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = new MudDialogInstance();
    [Parameter] public string dialogTitle { get; set; } = string.Empty;
    [Parameter] public string contentText { get; set; } = string.Empty;
    [Parameter] public string buttonText { get; set; } = string.Empty;
    [Parameter] public Enums.ActionMode actionMode { get; set; }
    private Color color { get; set; }
    private string note {get;set;} = string.Empty;
    private bool dataFetched;

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
    }

    protected override void OnInitialized()
    {
        Console.WriteLine(actionMode);
        CheckActionsMode();
        CompletedFetch();
    }

    private void CompletedFetch()
    {
        dataFetched = true;
        Task.Run(StateHasChanged);
    }

    private void Submit()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void CheckActionsMode()
    {
        if (actionMode == Enums.ActionMode.Create) {
            contentText = $"Are you sure you want to save this {contentText}?";
            buttonText = "Confirm";
            color = Color.Info;
        } else if (actionMode == Enums.ActionMode.Update) {
            contentText = $"Are you sure you want to update this {contentText}?";
            buttonText = "Confirm";
            color = Color.Info;
        } else if (actionMode == Enums.ActionMode.Approve) {
            contentText = $"Are you sure you want to approve {contentText}?";
            buttonText = "Approve";
            color = Color.Info;
        } else if (actionMode == Enums.ActionMode.Cancel) {
            contentText = $"Are you sure you want to cancel {contentText}?";
            buttonText = "Cancel";
            color = Color.Info;
        } else if (actionMode == Enums.ActionMode.Receive) {
            contentText = $"Are you sure you want to receive {contentText}?";
            buttonText = "Receive";
            color = Color.Info;
        } else if(actionMode == Enums.ActionMode.Delete) {
            contentText = $"Are you sure you want to remove {contentText}?";
            buttonText = "Remove";
            color = Color.Info;
        }
        else if(actionMode == Enums.ActionMode.Void)
        {
            contentText = $"Are you sure you want to void {contentText}?";
            buttonText = "Void";
            color = Color.Info;
        }
        else if(actionMode == Enums.ActionMode.Released)
        {
            contentText = $"Are you sure you want to release this {contentText}?";
            buttonText = "Release";
            color = Color.Info;
        }
        else if(actionMode == Enums.ActionMode.Cleared)
        {
            contentText = $"Are you sure you want to clear this {contentText}?";
            buttonText = "Clear";
            color = Color.Info;
        }
        else if(actionMode == Enums.ActionMode.Deactivate)
        {
            contentText = $"Are you sure you want to deactivate this {contentText}?";
            note = "Note: This will remove the item from the list.";
            buttonText = "Confirm";
            color = Color.Error;
        }
        else if(actionMode == Enums.ActionMode.Route)
        {
            contentText = $"Are you sure you want to route this {contentText}?";
            buttonText = "Route";
            color = Color.Info;
        }
        else if(actionMode == Enums.ActionMode.Invalid)
        {
            contentText = $"Your are not allowed to remove this details, payee have EWT value.";
            buttonText = "OK";
            color = Color.Info;
        }
    }
}

