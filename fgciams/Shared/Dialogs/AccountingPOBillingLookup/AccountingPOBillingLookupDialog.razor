@inject IAccountingPOBillingService accountingStatusService

<MudDialog Class='customdialog'>
    <TitleContent>
        <div class='d-flex align-center'>
            <MudIcon Icon="@Icons.Filled.Search" Class="mr-3 mb-n1"/>
            <MudText Typo='Typo.h6'>PO Billing</MudText>
        </div>
    </TitleContent>
    <DialogContent>
        <div Class='customdialog__content-container'>
            <BlazoredTypeahead SearchMethod=LoadPOBilling 
            @bind-Value='poBilling' Debounce="500" placeholder='Payee' >
              <SelectedTemplate>
              @context.ControlNumber | @context.Supplier
              </SelectedTemplate>
              <ResultTemplate>
              @context.ControlNumber | @context.Supplier
            </ResultTemplate>
            </BlazoredTypeahead> 
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant='Variant.Text'>Cancel</MudButton>
        <MudButton OnClick="Submit" Variant='Variant.Filled' Color="@color">@buttonText</MudButton>
    </DialogActions>
</MudDialog>
@code{
  [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
  [Parameter] public string dialogTitle { get; set; } = default!;
  [Parameter] public string contentText { get; set; } = default!;
  [Parameter] public string buttonText { get; set; } = default!;
  [Parameter] public Color color { get; set; }
  AccountingPOBillingModel poBilling = new();
  async Task<IEnumerable<AccountingPOBillingModel>> LoadPOBilling(string searchString)
  {
    var filterParameter = new FilterParameter()
    {
      IsControlNumber = true,
      ControlNumber = searchString
    };
    var POs = await accountingStatusService.LoadAccountingBillingPO(filterParameter, GlobalClass.token);
    return POs.Where(x=>x.ControlNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase) || x.Supplier.Contains(searchString, StringComparison.OrdinalIgnoreCase)).ToList();
  }
  void Submit()
  {
    MudDialog.Close(DialogResult.Ok(poBilling));
  }
  void Cancel()
  {
    MudDialog.Close(DialogResult.Ok(poBilling));
  }
}